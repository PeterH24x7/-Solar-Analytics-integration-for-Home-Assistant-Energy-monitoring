#
# SOLAR ANALYTICS integration for Home Assistant Energy Monitoring
# 
# Developed by Peter Hormann and Glen S.
# Updates: 
#     16-Jan-2022 - added power reporting (last 5 minute average).
#     16-Jul-2022 - enabled more accurate and more frequent 1 minute power reporting
#                 - added 5 minute energy updates for all channels
#                 - moved sa_site_id to secrets.yaml.
#
# Created: 7-Jan-2022
#
# This code is provided as-is and without any warrantee or guarantees. 
# Further public contributions and enhancements are welcomed.
# 
# Installation: be added to an existing HA configuration.yaml (or include) file under a new or existing "sensor:" block. 
#

sensor:

#
# - SOLAR ANALYTICS SETUP ------------------------------------------------------
#
# Note: site_id value is required in URLs used in gets below - e.g. 36303.
#

# Solar Analytics - get the site details associated with the given user account login.
# Updated every 24 hours.
  - platform: rest
    name: sa_site_list
    resource: https://portal.solaranalytics.com.au/api/v3/site_list?hardware=true&capacity=true&subscription=true
    username: !secret sa_username
    password: !secret sa_password
    authentication: basic
    value_template: "{{ now() }}"
# note: assumes only a single device per account, there could be a second device (e.g. replaced device due to fault/upgrade) at $.data.[1]
    json_attributes_path: "$.data.[0]"
    json_attributes:
      - "e_status"
      - "fault_class"
      - "fault_id"
      - "has_pv"
      - "mer_status"
      - "overall_status"
      - "retailer_user"
      - "s_cli_site_name"
      - "site_id"
      - "site_inactive"
      - "capacity"
      - "devices"
      - "sub_type"
    scan_interval: 62400

# Solar Analytics - get the site status for the specified site_id.
# Updated every hour.
  - platform: rest
    name: sa_status
    resource_template: https://portal.solaranalytics.com.au/api/v3/site_status/{{ states('input_text.sa_site_id') }}
    username: !secret sa_username
    password: !secret sa_password
    authentication: basic
    value_template: "{{ value_json['data']['mer_status'] }}"
    json_attributes_path: "$.data"
    json_attributes:
      - "dashboard_status"
      - "event_id"
      - "event_list"
      - "fault_status"
      - "mer_percentage"
      - "mer_status"
      - "mer_text"
    scan_interval: 3600
    force_update: true

  - platform: template
    sensors:
      sa_dashboard_status:
        friendly_name: "Dashboard Status"
        value_template: "{{ state_attr('sensor.sa_status', 'dashboard_status') }}"
      sa_mer_status:
        friendly_name: "System Status"
        value_template: "{{ state_attr('sensor.sa_status', 'mer_status') }}"
      sa_mer_percentage: 
        friendly_name: "PV Performance"
        value_template: "{{ state_attr('sensor.sa_status', 'mer_percentage') }}"
        unit_of_measurement: "%"

# Solar Analytics - get the site raw data for the specified site_id.
# Updated every 24 hours showing for 11:55pm the day before (interesting, but not very useful).
#   - platform: rest
#     name: sa_data_detail
#     resource: https://portal.solaranalytics.com.au/api/v2/site_data/36303?gran=minute&raw=true  
#     username: !secret sa_username
#     password: !secret sa_password
#     authentication: basic
#     value_template: "{{ value_json['data'][0]['monitors'] }}"
#     json_attributes_path: "$.data.[0].data.[0]"
#     json_attributes:
#       - "apparentPower"
#       - "current"
#       - "energy" 
#       - "energyNeg"
#       - "energyPos"
#       - "power"
#       - "powerFactor"
#       - "reactiveEnergy"
#       - "reactivePower"
#       - "time"
#       - "voltage"
#     scan_interval: 86400
#     force_update: true
# 
#   - platform: template
#     sensors:
#       sa_detail_apparent_power:
#         friendly_name: "Apparent Power"
#         value_template: "{{ state_attr('sensor.sa_data_detail', 'apparentPower') | round(1) }}"
#         unit_of_measurement: "W"
#         device_class: power
#       sa_detail_current:
#         friendly_name: "Current"
#         value_template: "{{ state_attr('sensor.sa_data_detail', 'current') | round(1) }}"
#         unit_of_measurement: "A"
#         device_class: current
#       sa_detail_energy:
#         friendly_name: "Energy"
#         value_template: "{{ state_attr('sensor.sa_data_detail', 'energy') | round(1) }}"
#         unit_of_measurement: "Wh"
#         device_class: energy
#       sa_detail_energy_neg:
#         friendly_name: "Energy Neg"
#         value_template: "{{ state_attr('sensor.sa_data_detail', 'energyNeg') | round(1) }}"
#         unit_of_measurement: "Wh"
#         device_class: energy
#       sa_detail_energy_pos:
#         friendly_name: "Energy Pos"
#         value_template: "{{ state_attr('sensor.sa_data_detail', 'energyPos') | round(1) }}"
#         unit_of_measurement: "Wh"
#         device_class: energy
#       sa_detail_power:
#         friendly_name: "Power"
#         value_template: "{{ state_attr('sensor.sa_data_detail', 'power') | round(1) }}"
#         unit_of_measurement: "W"
#         device_class: power
#       sa_detail_power_factor:
#         friendly_name: "Power Factor"
#         value_template: "{{ state_attr('sensor.sa_data_detail', 'powerFactor') | round(0) }}"
#         unit_of_measurement: "%"
#         device_class: power_factor
#       sa_detail_reactive_energy:
#         friendly_name: "Reactive Energy"
#         value_template: "{{ state_attr('sensor.sa_data_detail', 'reactiveEnergy') | round(1) }}"
#         unit_of_measurement: "Wh"
#         device_class: energy
#       sa_detail_reactive_power:
#         friendly_name: "Reactive Power"
#         value_template: "{{ state_attr('sensor.sa_data_detail', 'reactivePower') | round(1) }}"
#         unit_of_measurement: "W"
#         device_class: power
#       sa_detail_time:
#         friendly_name: "Date and Time"
#         value_template: "{{ state_attr('sensor.sa_data_detail', 'time') | int | timestamp_custom ('%d-%m-%Y %H:%M')  }}"
#       sa_detail_voltage:
#         friendly_name: "Voltage"
#         value_template: "{{ state_attr('sensor.sa_data_detail', 'voltage') | round(1) }}"
#         unit_of_measurement: "V"
#         device_class: voltage


# Solar Analytics - get the daily data.
# Note: this data is not updated in real time - the numbers can take hours to update. Practically this is not very useful.
# Updated every hour.
#   - platform: rest
#     name: sa_data_by_day
#     resource: https://portal.solaranalytics.com.au/api/v2/site_data/36303
#     username: !secret sa_username
#     password: !secret sa_password
#     authentication: basic
#     value_template: "{{ value_json['data'][30]['t_stamp'] }}"
#     json_attributes_path: "$.data.[30]"
#     json_attributes:
#       - "energy_consumed"
#       - "energy_expected"
#       - "energy_generated" 
#       - "t_stamp"
#     state_class: measurement
#     device_class: energy
#     scan_interval: 3600
#     force_update: true

#   - platform: template
#     sensors:
#       sa_date:
#         friendly_name: "Date-time"
#         value_template: "{{ state_attr('sensor.sa_data_by_day', 't_stamp') }}"
#         icon_template: mdi:clock-end
#       sa_today_consumed:
#         friendly_name: "Energy Consumed"
#         value_template: "{{ state_attr('sensor.sa_data_by_day', 'energy_consumed') | round(1) }}"
#         unit_of_measurement: "Wh"
#         icon_template: mdi:home-lightning-bolt-outline
#       sa_today_expected:
#         friendly_name: "PV Generated Expected"
#         value_template: "{{ state_attr('sensor.sa_data_by_day', 'energy_expected') | round(1) }}"
#         icon_template: mdi:solar-power
#         unit_of_measurement: "Wh"
#       sa_today_generated: 
#         friendly_name: "PV Generated Actual"
#         value_template: "{{ state_attr('sensor.sa_data_by_day', 'energy_generated') | round(1) }}"
#         unit_of_measurement: "Wh"
#         icon_template: mdi:solar-power

# Solar Analytics - get 5 minute energy data.
# Used to calculate today's cumulative total energy for consumed, generated, imported and exported energy as used by the HA Energy module.
# Updated every 5 minutes.
# Note: the previously calculated sa_consumption_power, sa_generation_power and sa_import_export_power (as an average over 5 minutes) are now directly sourced using the sa_live_site_data sensor below.
## 15-Jul-22 - added trunc=false to include decimal components of 5 minute date (default is true). Also added air conditioner, EV, hot water and stove-oven energy loads.
  - platform: rest
    name: sa_data_by_5min
    resource_template: https://portal.solaranalytics.com.au/api/v2/site_data/{{ states('input_text.sa_site_id') }}?all=true&gran=minute&trunc=false&power=false&tstart={{ now().strftime("%Y%m%d") }}&tend={{ now().strftime("%Y%m%d") }}   
    username: !secret sa_username
    password: !secret sa_password
    authentication: basic
    value_template: >-
      {% set most_recent_sensor_data = value_json['data'] | rejectattr('energy_consumed', 'equalto', None) | list | last %}
        {{ most_recent_sensor_data.t_stamp }}    
    json_attributes:
      - "data"
    state_class: measurement
    device_class: energy
    scan_interval: 300
    force_update: true

  - platform: template
    sensors:
      sa_todays_energy_consumed_total:
        friendly_name: Total Energy Consumed
        unit_of_measurement: "Wh"
        value_template: "{{ states.sensor.sa_data_by_5min.attributes.data | rejectattr('energy_consumed', 'equalto', None) | sum(attribute='energy_consumed') | int }}"
        icon_template: mdi:home-lightning-bolt-outline
        device_class: "energy"
        attribute_templates:
          state_class: total_increasing
          time_stamp: "{{ states.sensor.sa_data_by_5min.state }}"
      sa_todays_energy_generated_total:
        friendly_name: Total Energy Generated
        unit_of_measurement: "Wh"
        value_template: "{{ states.sensor.sa_data_by_5min.attributes.data | rejectattr('energy_generated', 'equalto', None) | sum(attribute='energy_generated') | int }}"
        icon_template: mdi:solar-power
        device_class: "energy"
        attribute_templates:
          state_class: total_increasing
          time_stamp: "{{ states.sensor.sa_data_by_5min.state }}"


      sa_todays_air_conditioner_total:
        friendly_name: Heating Cooling Energy
        unit_of_measurement: "Wh"
        value_template: "{{ states.sensor.sa_data_by_5min.attributes.data | rejectattr('load_air_conditioner', 'equalto', None) | sum(attribute='load_air_conditioner') | int }}"
        icon_template: mdi:hvac
        device_class: "energy"
        attribute_templates:
          state_class: total_increasing
          time_stamp: "{{ states.sensor.sa_data_by_5min.state }}"

      sa_todays_electric_vehicle_total:
        friendly_name: Electric Vehicle Energy
        unit_of_measurement: "Wh"
        value_template: "{{ states.sensor.sa_data_by_5min.attributes.data | rejectattr('load_ev_charger', 'equalto', None) | sum(attribute='load_ev_charger') | int }}"
        icon_template: mdi:car-electric
        device_class: "energy"
        attribute_templates:
          state_class: total_increasing
          time_stamp: "{{ states.sensor.sa_data_by_5min.state }}"

      sa_todays_hot_water_total:
        friendly_name: Hot Water Energy
        unit_of_measurement: "Wh"
        value_template: "{{ states.sensor.sa_data_by_5min.attributes.data | rejectattr('load_hot_water', 'equalto', None) | sum(attribute='load_hot_water') | int }}"
        icon_template: mdi:shower-head
        device_class: "energy"
        attribute_templates:
          state_class: total_increasing
          time_stamp: "{{ states.sensor.sa_data_by_5min.state }}"

      sa_todays_stove_oven_total:
        friendly_name: Stove Oven Energy
        unit_of_measurement: "Wh"
        value_template: "{{ states.sensor.sa_data_by_5min.attributes.data | rejectattr('load_stove', 'equalto', None) | sum(attribute='load_stove') | int }}"
        icon_template: mdi:stove
        device_class: "energy"
        attribute_templates:
          state_class: total_increasing
          time_stamp: "{{ states.sensor.sa_data_by_5min.state }}"


      sa_todays_energy_imported:
        friendly_name: Total Energy Imported
        unit_of_measurement: "Wh"
        value_template: >
          {% set energy = namespace(imported=0) %}
          {% for sensor_data in states.sensor.sa_data_by_5min.attributes.data | rejectattr('energy_consumed', 'equalto', None) if sensor_data.energy_consumed > sensor_data.energy_generated %}
            {% set energy.imported = energy.imported + sensor_data.energy_consumed - sensor_data.energy_generated %}
          {% endfor %}
          {{ energy.imported | int }}
        icon_template: mdi:transmission-tower-export
        device_class: "energy"
        attribute_templates:
          state_class: total_increasing
          time_stamp: "{{ states.sensor.sa_data_by_5min.state }}"
      sa_todays_energy_exported:
        friendly_name: Total Energy Exported
        unit_of_measurement: "Wh"
        value_template: >
          {% set energy = namespace(exported=0) %}
          {% for sensor_data in states.sensor.sa_data_by_5min.attributes.data | rejectattr('energy_generated', 'equalto', None) if sensor_data.energy_generated > sensor_data.energy_consumed %}
            {% set energy.exported = energy.exported + sensor_data.energy_generated - sensor_data.energy_consumed %}
          {% endfor %}
          {{ energy.exported | int }}
        icon_template: mdi:transmission-tower-import
        device_class: "energy"
        attribute_templates:
          state_class: total_increasing
          time_stamp: "{{ states.sensor.sa_data_by_5min.state }}"

# Solar Analytics - get live per minute power data - added 9-Jul-22.
# Used to generate most recent power information.
# Updated every 60 seconds.
# Note: this is not a published API 'get', but is used by the SA portal to display minute to minute power for a site.
  - platform: rest
    name: sa_live_site_data
    resource_template: https://portal.solaranalytics.com.au/api/v3/live_site_data?site_id={{ states('input_text.sa_site_id') }}&last_six=true
    username: !secret sa_username
    password: !secret sa_password
    authentication: basic
    value_template: >-
      {% set most_recent_sensor_data = value_json['data'] | list | last %}
        {{ as_timestamp(most_recent_sensor_data.t_stamp) | timestamp_custom ('%Y-%m-%d %H:%M:%S')}}    
    json_attributes:
      - "data"
    state_class: measurement
    device_class: power
    scan_interval: 60
    force_update: true

  - platform: template
    sensors:          
      sa_consumption_power:
        friendly_name: Power Consumption
        unit_of_measurement: "W"
        value_template: >
          {% set most_recent_sensor_data = states.sensor.sa_live_site_data.attributes.data | list | last %}
            {{ most_recent_sensor_data.consumed | int }}
        icon_template: mdi:home-lightning-bolt-outline
        device_class: "power"
        attribute_templates:
          state_class: measurement
          time_stamp: "{{ states.sensor.sa_live_site_data.state }}"
      sa_generation_power:
        friendly_name: Power Generation
        unit_of_measurement: "W"
        value_template: >      
          {% set most_recent_sensor_data = states.sensor.sa_live_site_data.attributes.data | list | last %}
            {{ most_recent_sensor_data.generated | int }}
        icon_template: mdi:transmission-tower-import
        device_class: "power"
        attribute_templates:
          state_class: measurement
          time_stamp: "{{ states.sensor.sa_live_site_data.state }}"

      sa_import_export_power:
        friendly_name: Power Import Export
        unit_of_measurement: "W"
        value_template: >      
          {{ (states.sensor.sa_consumption_power.state | int) - (states.sensor.sa_generation_power.state | int) }}
        icon_template: mdi:transmission-tower
        device_class: "power"
        attribute_templates:
          state_class: measurement
          time_stamp: "{{ states.sensor.sa_live_site_data.state }}"

input_text:
    sa_site_id:
      initial: !secret sa_site_id
      
# -----------------------------------------------------------------------------


